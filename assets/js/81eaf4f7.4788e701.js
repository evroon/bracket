"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[679],{5531:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>d,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>i});var t=o(4848),r=o(8453);const c={},d="Nomad",s={id:"deployment/nomad",title:"Nomad",description:"This section describes how to deploy Bracket (frontend and backend) to",source:"@site/docs/deployment/nomad.md",sourceDirName:"deployment",slug:"/deployment/nomad",permalink:"/docs/deployment/nomad",draft:!1,unlisted:!1,editUrl:"https://github.com/evroon/bracket/tree/master/docs/docs/deployment/nomad.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Docker",permalink:"/docs/deployment/docker"},next:{title:"Systemd",permalink:"/docs/deployment/systemd"}},a={},i=[{value:"Backend",id:"backend",level:2},{value:"Frontend",id:"frontend",level:2}];function p(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"nomad",children:"Nomad"}),"\n",(0,t.jsxs)(e.p,{children:["This section describes how to deploy Bracket (frontend and backend) to\n",(0,t.jsx)(e.a,{href:"https://www.nomadproject.io",children:"Nomad"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["First, make sure you have a running Nomad cluster. See the\n",(0,t.jsx)(e.a,{href:"https://developer.hashicorp.com/nomad/tutorials/enterprise/production-deployment-guide-vm-with-consul",children:"production deployment guide"})," on how to achieve that. "]}),"\n",(0,t.jsx)(e.p,{children:"Then, you can use the following files describing the tasks for the backend and frontend."}),"\n",(0,t.jsx)(e.h2,{id:"backend",children:"Backend"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'job "bracket-backend" {\n  datacenters = ["*"]\n\n  group "servers" {\n    count = 1\n\n    network {\n      port "uvicorn" {\n        to = 8400\n      }\n    }\n\n    service {\n      provider = "nomad"\n      port     = "uvicorn"\n    }\n\n    task "api" {\n      driver = "docker"\n      \n      env {\n        ENVIRONMENT = "PRODUCTION"\n        PG_DSN = "postgresql://bracket_prod:bracket_prod@postgres:5432/bracket_prod"\n        JWT_SECRET = "38af87ade31804cc115166f605586a57c6533eeb4342e66c5229f44a76afdde4"\n        AUTO_RUN_MIGRATIONS = "false"\n      }\n\n      config {\n        image   = "ghcr.io/evroon/bracket-backend"\n        ports   = ["uvicorn"]\n        command = "pipenv"\n        args    = [\n          "run",\n          "uvicorn",\n          "bracket.app:app",\n          "--port",\n          "${NOMAD_PORT_uvicorn}",\n          "--host",\n          "0.0.0.0",\n       ]\n      }\n\n      resources {\n        cpu    = 256\n        memory = 512\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"frontend",children:"Frontend"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'job "bracket-frontend" {\n  datacenters = ["*"]\n\n  group "servers" {\n    count = 1\n\n    network {\n      port "nextjs" { }\n    }\n\n    service {\n      provider = "nomad"\n      port     = "nextjs"\n    }\n\n    task "api" {\n      driver = "docker"\n      \n      env {\n        NEXT_PUBLIC_API_BASE_URL = "https://my.bracketdomain.com"\n        NEXT_PUBLIC_HCAPTCHA_SITE_KEY = "xxxxx"\n        NODE_ENV = "production"\n      }\n\n      config {\n        image   = "ghcr.io/evroon/bracket-frontend"\n        ports   = ["nextjs"]\n        args = ["yarn", "start", "-p", "${NOMAD_PORT_nextjs}"]\n      }\n\n      resources {\n        cpu    = 256\n        memory = 512\n      }\n    }\n  }\n}\n'})})]})}function l(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>d,x:()=>s});var t=o(6540);const r={},c=t.createContext(r);function d(n){const e=t.useContext(c);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:d(n.components),t.createElement(c.Provider,{value:e},n.children)}}}]);